// 10.1.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//

#include <iostream>
#include <windows.h>
#include <stdio.h>
#pragma comment(lib, "user32.lib")

void main()
{
    setlocale(0, "ru");
    SYSTEM_INFO siSysInfo;
    // Копируется информация об оборудовании в структуру SYSTEM_INFO.

    //позволяет получить различную информацию о работе операционной системы, 
    //в том числе и по работе с памятью. Эта функция принимает по ссылке один параметр
    GetSystemInfo(&siSysInfo);
    // Отображается содержимое структуры SYSTEM_INFO.

    printf("Что-то о моём ноуте, чего я точно не знала :) \n\n");

    //используется для Windows 95. Это поле всегда устанавливается равным нулю или значению PROCESSOR_ARCHITECTURE_INTEL.
    printf("  OEM ID: %u\n", siSysInfo.dwOemId); 

    //возвращает количество процессоров в системе.
    printf("  кол-во процессоров %u\n", siSysInfo.dwNumberOfProcessors);

    //содержит размер страницы в килобайтах и определяет степень разбиения при защите и фиксации страниц.
    printf("  размер страницы в Кб: %u\n", siSysInfo.dwPageSize);

    //в настоящее время неактуально. Оно составлено для обратной совместимости.
    printf("  тип процессора: %u\n", siSysInfo.dwProcessorType);

    //самый младший адрес памяти, доступный для приложений и DLL. 
    //Попытка получить доступ к адресу памяти ниже этого значения приведет, вероятнее всего, к нарушению прав доступа.
    printf("  младший адрес памяти: %lx\n", siSysInfo.lpMinimumApplicationAddress);

    //самый старший адрес памяти, доступный для приложений и DLL
    printf("  старший адрес памяти: %lx\n", siSysInfo.lpMaximumApplicationAddress);

    //возвращает маску, представляющую набор процессоров, сконфигурированных в системе. Бит 0 представляет первый процессор, 
    //а бит 255 – 256-й. Поскольку Windows 95/98 поддерживает только один процессор, то в данном случае устанавливается лишь бит 0.
    printf("  Active processor mask: %u\n", siSysInfo.dwActiveProcessorMask);
    
    //возвращает степень разбиения, которая учитывается при распределении памяти. 
    //В Windows 95/98 этот параметр имеет фиксированное значение 64 Кб.
    printf("  Степень разбиения: %u\n", siSysInfo.dwAllocationGranularity);

    //описывает тип архитектуры используемого процессора Под управлением Windows NT
    printf("  тип архитектуры: %u\n", siSysInfo.wProcessorArchitecture);

    // определяет уровень процессора, зависящий от архитектуры системы
    printf("  уровень процессора: %u\n", siSysInfo.wProcessorLevel);

    //определяет модификацию процессора, зависящую от архитектуры системы. 
    //Подобно полю wProcessorLevel, оно может содержать различные значения для разных процессоров.
    printf("  модификация процессора: %u\n", siSysInfo.wProcessorRevision);

    /*так же есть :
    wReserved - но это поле не используется.
    */
}
